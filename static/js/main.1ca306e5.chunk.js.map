{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setfilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ca306e5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n    const inputTextHanler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {text: inputText, completed: false,id: Math.random() * 1000}\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHanler} type=\"text\" className=\"todo-input\"/>\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fa fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n       setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n\r\n    const completedHandler = () =>{\r\n        setTodos(todos.map((item) => {\r\n                if(item.id === todo.id){\r\n                    return{\r\n                        ...item,\r\n                        completed: !item.completed,\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completedHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from \"./Todo\"; // Import Components\r\n\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo  \r\n                    todos={todos}\r\n                    setTodos={setTodos}\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    text={todo.text}\r\n                    />\r\n                ))}\r\n            </ul>   \r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group';\nimport './index.css';\n\n\nfunction App() {\n\n  // State Stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setfilteredTodos] = useState([]);\n\n  // Run Once when the app start\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  // Use Effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  },[todos,status]);\n  \n  // Functions\n  const filterHandler = () => {\n    switch (status){\n      case 'completed':\n        setfilteredTodos(todos.filter((todo) => todo.completed === true))\n        break;\n      case 'uncompleted':\n        setfilteredTodos(todos.filter((todo) => todo.completed === false))\n        break;\n      default:\n        setfilteredTodos(todos);\n        break;\n      }  \n  };\n  \n  // Save to Local \n  const saveLocalTodos = () => {\n    localStorage.setItem('todos',JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos',JSON.stringify([]));\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My Todo List</h1>\n      </header>\n      <Form inputText={inputText}\n      todos={todos}\n      setTodos={setTodos}\n      setInputText={setInputText} \n      setStatus={setStatus}\n      />\n      <TodoList \n      filteredTodos={filteredTodos}\n      setTodos={setTodos}\n      todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}